// Missing classnames/elements in UI (will make a PR for these changes):
// - search container
// - 'active'-classname on selected item (lgXNgK)

// TODO: Set and use CSS-vars in stead of SCSS-vars
// TODO: Text when no notes were found
// TODO: Text when no notes were found

$selectedItem: '.ga-DjpS';

@mixin focusRing {
  box-shadow: 0 0 0 16px rgba($controlAccentColor, 0);

  &:focus {
    transition: 0.25s box-shadow cubic-bezier(0.61, 1, 0.88, 1);
    transition-delay: 0.125s;
    box-shadow: 0 0 0 0.35rem rgba($controlAccentColor, 0.5);
  }
}

.rli-noteList {
  > div:first-child {
    border-right: 1px solid $gridColor;
  }

  // search
  > div > div > div:first-child {
    background-color: #fff;
    overflow: hidden;
    width: 100%;
  }

  input[type='text'] {
    @include focusRing;

    border: 1px solid $separatorColor;
    border-radius: 0.6rem;
    font-size: 1.3rem;
    height: 2.8rem;
    padding: 0 2.5rem 0 3rem !important;
    width: 100%;
    flex: 1 0 100%;

    &::placeholder {
      color: $tertiaryLabelColor;
    }
  }

  // search button
  input[type='text'] + button {
    flex: 0;
    position: unset;
    padding: 0;
    right: auto;
    top: 1px;

    // always show magnifying glass
    span::before {
      position: absolute;
      left: 0;
      content: '􀊫' !important; // magnifyingglass
      color: $secondaryLabelColor;
      font-size: 1.6rem;
      font-family: var(--g-font-family-system);
      font-weight: normal !important;
      top: 0.5rem;
      left: 0.8rem;
      pointer-events: none;
    }
  }

  // cross when input value !== empty
  .fa-times {
    font-size: 13px;
    font-weight: normal;

    &::after {
      display: block;
      content: '􀁡'; // xmark.circle.fill
      position: absolute;
      color: $secondaryLabelColor;
      right: 0.7rem;
      top: 0.7rem;
      font-family: 'SF Pro' !important;
    }
  }

  // 'add'-buttons next to search
  > div > div > div:first-child > div:nth-child(2) {
    position: relative;
    overflow: hidden;
    width: auto;
    max-height: 2.8rem;
    flex: 1 0 auto;

    button {
      background: none;
      border-radius: 0.6rem;
      color: #fff;
      margin-left: 0.6rem;
      max-height: none;
      max-width: none;
      height: 2.6rem;
      width: 2.6rem;

      + button {
        margin-left: 0.1rem;
      }

      span:before {
        color: $secondaryLabelColor;
        display: block;
        font-family: 'SF Pro';
        font-size: 16px;
        font-weight: 500;
        -webkit-font-smoothing: antialiased;
        transform: translateY(0.05rem);
      }

      // new todo
      &:first-child span:before {
        content: '􀁢';
      }
      // new note
      &:last-child span:before {
        content: '􀈎';
      }

      &:focus,
      &:hover {
        background: $quaternaryLabelColor;
      }
    }
  }

  // note list + items
  .note-list {
    padding: 0 1rem 1rem;
  }

  .list-item-container {
    border-radius: 4px;
    height: 3.2rem;

    &:nth-child(odd) {
      background: var(--note-list-item-odd);
    }
    &:nth-child(even) {
      background: var(--note-list-item-even);
    }

    a {
      padding: 0 10px !important;
    }

    &#{$selectedItem} {
      background: $selectedContentBackgroundColor !important;

      a {
        color: $textBackgroundColor !important;
      }
    }

    // remove divider
    &::before {
      content: none;
    }

    > a > span {
      overflow: hidden;
      text-overflow: ellipsis;
    }
  }

  > div > div > div:last-child {
    background-color: #fff;
  }

  // fix: remove obsolete border
  > div > div > div:last-child {
    border-right: none;
  }
}
